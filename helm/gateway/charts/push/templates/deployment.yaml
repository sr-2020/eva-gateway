apiVersion: apps/v1
kind: Deployment
metadata:
  name: push
spec:
  selector:
    matchLabels:
      run: push
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        run: push
    spec:
      containers:
        - name: push
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          env:
            - name: POSTGRESQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: push-configmap
                  key: POSTGRESQL_HOST
            - name: POSTGRESQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: push-configmap
                  key: POSTGRESQL_DATABASE
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            - name: FIREBASE_SERVER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: push
                  key: firebaseServerToken
